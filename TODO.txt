---------------------------------------------------------------------
TODO - MUNIN
Niklas Elmqvist - Created October 29, 2010
---------------------------------------------------------------------

[X] Communicate only which fields have changed in shared object state
[N] Store primitive data types beyond strings (integers, doubles, booleans?)
[X] Store objects instead of strings
[X] Columns (or arrays) as shared objects?
[X] Shared object name(?)
[N] Maintain sequence of shared objects (to maintain depth order)
[X] Geometry configuration for clients to determine extents and active parts of visual space
[X] Create event channel (listeners and sending framework)
[X] Create event class (shared entity that is not persistent)
[X] Refactor out the UUIDs as far as possible
[X] Allow clients to survey view so that it can be used in the launchpad (etc)
[X] Need a "hasValue" for SharedObjects which check whether a key as a particular value
[X] All services need their own peers so that they get all updates.
[X] Get rid of warnings due to joint clusters
[X] Change settings manager so that it does not reload the same file over and over at refresh
[X] Bind (and unbind) all rendering services to display services
[X] One renderer per display service, or do we make the renderers display-service-aware?
[X] No need for names for objects?  Remove this.
[X] Should create messages also have data?  Yes, probably. (Remove create, just use change messages for everything.)
[X] Find a way to avoid subscribing to everything
[X] Need a mechanism to bind data to a shared object at creation
[ ] More efficient serialization (?)
[ ] Discovering and querying for shared objects
[ ] Deal with startup and order of calls
[ ] Finalize the query support
[ ] Refactor code and package structure
[ ] Save log files instead of printing to standard error
[ ] Remove reliance on Piccolo and other libraries
[ ] Move all plugins to a Munin plugin project
[ ] Should plugins (service factories) be able to create multiple services?
[ ] Do we need "canGetString", "canGetBoolean" etc for shared objects?
[ ] Show a list of currently running services (representation of the ServiceManager)
[ ] Update peer table as plugins execute
[ ] Avoid hard-coded URL for the munin.xml file
[ ] Can we serialize general Java classes to shared space?
[ ] Initialize the settings table combo box to something other than NULL

Major Spring 2013 refactor:
[X] 1. Select Munin channel name on startup
[X] 2. Create Platform based on channel name
[X] 3. Load space configuration if none exists and add to shared space
[X] 4. Create required objects in the Platform
[X] 5. Allow surface selection in LaunchPad
[X] 6. Define renderer and scene graph architecture
[N] 7. Do Java2D instead of Piccolo?
[ ] 8. Move renderers and display service to plugins project 
[X] Do all the services really need their own peers? One per platform is enough.
[X] Investigate potential bug in SharedArray (there is none)
[X] Resolve the bug with empty vectors for SharedArray
[X] Now find out what happens if you update a shared array (and fix any issues)
[X] Event ordering problem means that the scene graph will lack the last created element
[X] Fix event and array problems by getting rid of children lists and instead use parent references
[X] Store the representations in the renderer to avoid recreating scene graph constantly
[X] Resolve creation and changes for scene graph nodes
[X] Allow for changing geometric properties of shapes (not just visual appearance and transform)
[X] Resolve display service issues with concurrent runs of the launchpad (same machine) - fixed by running renderer on both instances
[X] Resolve insertion order for the scene graph
[ ] Fix thread safety or synchronization error when moving mouse cursor very quickly (Piccolo scene graph not to be modified outside of event thread)
[ ] Resolve the index ordering of objects in PNodes
[X] Get rid of object creation in renderers 
[X] Create a text renderer
[X] Combine image, shape, and text renderers
[X] Fix the camera transform for the Piccolo canvas (ensure it is working properly)
[ ] Combine space name selection and space configuration selection into one dialog with some feedback
[ ] Refactor array (and array delta) to allow for removals and additions (to end of list)
[ ] Implement the SVG path operation
[ ] Allow for rebuilding scene graph from scratch when starting display server late

Demos (Spring 2013):
[X] Multidimensional visualization demo
[X] - Toolbar accessed using mouse (separate Swing UI)
[X] - Load datasets from disk (.csv)
[X] - Select visualization and visual mapping in a dialog box
[X] - Create visualizations from datasets:
[X]   * Bar chart
[X]    - Dialog selection
[X]	   - Basic visualization
[X]    - Axis labels
[N]	   - Axis tick marks
[X]    - Group/aggregate by label
[X]   * Time-series visualization (line graph)
[X]	   - Multiple time series
[X]    - Dialog to add multiple columns
[N]   * Pie chart
[X]   * Scatterplot
[X]     - Axis labels
[X]     - Stay within the panel
[N]     - Tick marks
[X]   * Parallel coordinates
[X]		- Basic plotting
[X]		- Color selection
[X]		- Axis labels
[N]		- Axis values and tick marks
[X] Scribble service
[X] - Multiple lines
[N] - Use polyline instead of line? (does not work)
[X] Image stitch
[X] - provide a file input dialog
[X] - load a single image into the scene graph root
[X] Zoom-pan service
[X] - change transform of the root
[ ] - enable and disable event management 
[ ] - zoom to a point
[ ] - translate based on zoom (faster when zoomed out)
[X] Mouse stitch service
[X] - Show all press-drag-release (own and others)
[X] Labeling demo
[ ] Vector editor demo 
[ ] - Use display server and new shape renderer
[ ] - Handle mouse input
[ ] - Toolbar accessed using mouse (separate Swing UI)
[ ] - Support several shapes
[ ]   * Rectangles
[ ]   * Ellipses
[ ]   * Lines
[ ]   * Text
[ ]   * Images
[ ] - Select shapes
[ ] - Change color of selection
[ ] - Delete selection
[ ] - Put into a single assembly
[ ] Shard as a service
[ ] - Must use custom display service?
[ ] Android mouse stitch app (SBD)
[ ] - Zooming
[ ] - Panning
[ ] Android scene graph viewer (SBD)
[ ] - Zooming
[ ] - Panning
[X] Geovisualization demo (SBD)
[ ] Fix list of peers for Launchpad

LaunchPad:
[X] Implement assemblies (ordered lists of services)
[X] Implement the assembly viewer
[X] Move space configs to use the same code as the assembly viewer
[X] Show type and version of services
[X] Allow refresh of services, assemblies, and space configs
[X] Determine whether to use a single space or multiple spaces (Munin shared state)
[ ] Start an assembly on one peer
[ ] Start assemblies across all connected peers (?)
[ ] Shutdown across all connected peers (not working properly at the moment)
[ ] Save properties to remember previously chosen space configuration

Services:
[X] Implement a basic rendering and display service (Java2D or Piccolo)
[X] Implement an SVG renderer
[X] Utility library to create shapes
[X] Will mouse and keyboard have to be part of the same display service? (several plugins from one source)

Random thoughts:
[ ] Put space configuration in shared space?
[ ] Embed Rhino for JavaScript support inside Munin???

Shared objects and arrays:
[N] Option 1: make objects and arrays different classes (dictionaries vs. arrays)
[N] - Benefit: cleaner interfaces, clear separation, easy implementation
[N] - Drawback: two different interfaces, more coding
[X] Option 2: make arrays part of the contents of an object, i.e. a data type
[X] - Benefit: same interface, unified conceptual model
[X] - Drawback: complex implementation

[N] Allow for changing size of arrays
[N] Allow for singleton objects (?)